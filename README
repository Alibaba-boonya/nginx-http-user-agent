
syntax:

user_agent $variable_name {
    nogreedy        name;

    name [([+|-]version) | (version1~version2)]  value;
}

if ($variable == value) {
    echo hello;
}


it should define like this in the block:

nongreedy:
we specify the keyword in the user_agent string from right to left,and this is more efficient.
as usual,we use the greedy algorithm,it will return immediately after the keyword being found.
e.g 1. "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)",this string is
        msie'user_agent string,we will return when we find the keyword "MSIE"
but, the truth is not alway like this,

e.g 2. "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_3) AppleWebKit/535.20 (KHTML, like Gecko) Chrome/19.0.1036.7 Safari/535.20"
        this is chrome'user_agent,but we will match safari frist,so we define safari is nogreedy,we scan the string in reverse order.
If a keyword is nogreedy, it will not return when it matches the keyword at the first time. It will continue to scan the string.

default:
set the default value of this variable;

it should define like this in the block:
name   version    value;
name: it is the name of operating_system, browser, crawler and so on;
version: it is not necessary, and it support multiple formats;
value: it is something you want;

for example:

user_agent $example {
    #set default value
    default                                             msie;

    #define safare is nogreedy
    nogreedy                                            safari;

    #match exact version
    msie                6.0                             1;

    #match interval
    msie                7.0~8.0                         2;

    #match greater than version 9.0
    msie                9.0+                            3;

    #match less than version 4.0 (include 4.0)
    msie                4.0-                            4;

    #match all
    Chrome                                              5;
}
